#!/usr/bin/env python3
"""
Ejemplo de uso de las funciones de env√≠o de correos de solicitud de informaci√≥n
"""

import sys
import os
import json

# Agregar el directorio padre al path para importar m√≥dulos
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from document_expiry_monitor.notification import (
    send_information_request_email,
    get_client_data_by_id
)

def example_basic_usage():
    """
    Ejemplo b√°sico de uso con el ID de cliente proporcionado
    """
    # ID del cliente del ejemplo
    client_id = '222a45f8-a4ec-4029-bcda-9c947d836c1a'
    
    print(f"üöÄ Enviando correo de solicitud de informaci√≥n para cliente: {client_id}")
    
    # Env√≠o b√°sico con configuraci√≥n por defecto
    success = send_information_request_email(client_id)
    
    if success:
        print("‚úÖ Correo enviado exitosamente")
    else:
        print("‚ùå Error al enviar el correo")

def example_custom_request():
    """
    Ejemplo con detalles personalizados de la solicitud
    """
    client_id = '222a45f8-a4ec-4029-bcda-9c947d836c1a'
    
    # Detalles personalizados de la solicitud
    custom_request = {
        'tipo_solicitud': 'Renovaci√≥n de Documentos KYC',
        'documentos_requeridos': [
            'C√©dula de identidad vigente (frente y reverso)',
            'Comprobante de domicilio no mayor a 3 meses',
            'Estados de cuenta de los √∫ltimos 3 meses',
            'Declaraci√≥n jurada de ingresos',
            'Certificado de trabajo o constancia de empleo'
        ],
        'informacion_requerida': [
            'Datos personales actualizados',
            'Informaci√≥n laboral y fuente de ingresos',
            'Datos de contacto actualizados',
            'Informaci√≥n financiera y patrimonio',
            'Declaraci√≥n de beneficiarios finales'
        ],
        'plazo_entrega': '10 d√≠as h√°biles',
        'observaciones': 'Esta renovaci√≥n es requerida por regulaciones AML/CFT vigentes. El incumplimiento puede resultar en restricciones en sus servicios bancarios.'
    }
    
    print(f"üöÄ Enviando correo personalizado para cliente: {client_id}")
    
    success = send_information_request_email(client_id, custom_request)
    
    if success:
        print("‚úÖ Correo personalizado enviado exitosamente")
    else:
        print("‚ùå Error al enviar el correo personalizado")

def example_get_client_data():
    """
    Ejemplo de c√≥mo obtener datos del cliente
    """
    client_id = '222a45f8-a4ec-4029-bcda-9c947d836c1a'
    
    print(f"üìã Obteniendo datos del cliente: {client_id}")
    
    client_data = get_client_data_by_id(client_id)
    
    if client_data:
        print("‚úÖ Datos del cliente obtenidos:")
        print(f"   Nombre: {client_data.get('nombre_razon_social')}")
        print(f"   Email: {client_data.get('datos_contacto', {}).get('email')}")
        print(f"   Tel√©fono: {client_data.get('datos_contacto', {}).get('telefono')}")
        print(f"   Direcci√≥n: {client_data.get('datos_contacto', {}).get('direccion')}")
        print(f"   Segmento: {client_data.get('segmento_bancario')}")
    else:
        print("‚ùå No se pudieron obtener los datos del cliente")

def example_batch_send():
    """
    Ejemplo de env√≠o masivo a m√∫ltiples clientes
    """
    # Lista de IDs de clientes (ejemplo)
    client_ids = [
        '222a45f8-a4ec-4029-bcda-9c947d836c1a',
        # Agregar m√°s IDs seg√∫n sea necesario
    ]
    
    # Configuraci√≥n de solicitud para env√≠o masivo
    batch_request = {
        'tipo_solicitud': 'Actualizaci√≥n Anual de Informaci√≥n',
        'documentos_requeridos': [
            'Documento de identidad vigente',
            'Comprobante de domicilio actualizado',
            'Estados de cuenta recientes'
        ],
        'informacion_requerida': [
            'Datos personales actualizados',
            'Informaci√≥n de contacto',
            'Informaci√≥n financiera b√°sica'
        ],
        'plazo_entrega': '20 d√≠as h√°biles',
        'observaciones': 'Esta actualizaci√≥n anual es parte de nuestro proceso de mantenimiento de expedientes.'
    }
    
    print(f"üöÄ Enviando correos masivos a {len(client_ids)} clientes")
    
    success_count = 0
    error_count = 0
    
    for client_id in client_ids:
        try:
            success = send_information_request_email(client_id, batch_request)
            if success:
                success_count += 1
                print(f"‚úÖ Correo enviado a cliente {client_id}")
            else:
                error_count += 1
                print(f"‚ùå Error enviando correo a cliente {client_id}")
        except Exception as e:
            error_count += 1
            print(f"‚ùå Excepci√≥n enviando correo a cliente {client_id}: {str(e)}")
    
    print(f"\nüìä Resumen del env√≠o masivo:")
    print(f"   ‚úÖ Exitosos: {success_count}")
    print(f"   ‚ùå Errores: {error_count}")
    print(f"   üìß Total: {len(client_ids)}")

if __name__ == "__main__":
    print("üè¶ Sistema de Gesti√≥n Documental Bancario")
    print("=" * 50)
    
    # Ejecutar ejemplos
    print("\n1. Ejemplo b√°sico:")
    example_basic_usage()
    
    print("\n2. Ejemplo con datos personalizados:")
    example_custom_request()
    
    print("\n3. Obtener datos del cliente:")
    example_get_client_data()
    
    print("\n4. Env√≠o masivo:")
    example_batch_send()
    
    print("\n‚ú® Ejemplos completados") 